/**
 *  Copyright 2020-2021 Zhang QiuLiang (juteman). All rights reserved.
 *
 *  This file is a part of Hawl
 *  see(https://github.com/juteman/Hawl)
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 */

#pragma once
#include "BaseType.h"

typedef enum TextureFormat : uint32
{
    UNDEFINED = 0,
    R1_UNORM = 1,
    R2_UNORM = 2,
    R4_UNORM = 3,
    R4G4_UNORM = 4,
    G4R4_UNORM = 5,
    A8_UNORM = 6,
    R8_UNORM = 7,
    R8_SNORM = 8,
    R8_UINT = 9,
    R8_SINT = 10,
    R8_SRGB = 11,
    B2G3R3_UNORM = 12,
    R4G4B4A4_UNORM = 13,
    R4G4B4X4_UNORM = 14,
    B4G4R4A4_UNORM = 15,
    B4G4R4X4_UNORM = 16,
    A4R4G4B4_UNORM = 17,
    X4R4G4B4_UNORM = 18,
    A4B4G4R4_UNORM = 19,
    X4B4G4R4_UNORM = 20,
    R5G6B5_UNORM = 21,
    B5G6R5_UNORM = 22,
    R5G5B5A1_UNORM = 23,
    B5G5R5A1_UNORM = 24,
    A1B5G5R5_UNORM = 25,
    A1R5G5B5_UNORM = 26,
    R5G5B5X1_UNORM = 27,
    B5G5R5X1_UNORM = 28,
    X1R5G5B5_UNORM = 29,
    X1B5G5R5_UNORM = 30,
    B2G3R3A8_UNORM = 31,
    R8G8_UNORM = 32,
    R8G8_SNORM = 33,
    G8R8_UNORM = 34,
    G8R8_SNORM = 35,
    R8G8_UINT = 36,
    R8G8_SINT = 37,
    R8G8_SRGB = 38,
    R16_UNORM = 39,
    R16_SNORM = 40,
    R16_UINT = 41,
    R16_SINT = 42,
    R16_SFLOAT = 43,
    R16_SBFLOAT = 44,
    R8G8B8_UNORM = 45,
    R8G8B8_SNORM = 46,
    R8G8B8_UINT = 47,
    R8G8B8_SINT = 48,
    R8G8B8_SRGB = 49,
    B8G8R8_UNORM = 50,
    B8G8R8_SNORM = 51,
    B8G8R8_UINT = 52,
    B8G8R8_SINT = 53,
    B8G8R8_SRGB = 54,
    R8G8B8A8_UNORM = 55,
    R8G8B8A8_SNORM = 56,
    R8G8B8A8_UINT = 57,
    R8G8B8A8_SINT = 58,
    R8G8B8A8_SRGB = 59,
    B8G8R8A8_UNORM = 60,
    B8G8R8A8_SNORM = 61,
    B8G8R8A8_UINT = 62,
    B8G8R8A8_SINT = 63,
    B8G8R8A8_SRGB = 64,
    R8G8B8X8_UNORM = 65,
    B8G8R8X8_UNORM = 66,
    R16G16_UNORM = 67,
    G16R16_UNORM = 68,
    R16G16_SNORM = 69,
    G16R16_SNORM = 70,
    R16G16_UINT = 71,
    R16G16_SINT = 72,
    R16G16_SFLOAT = 73,
    R16G16_SBFLOAT = 74,
    R32_UINT = 75,
    R32_SINT = 76,
    R32_SFLOAT = 77,
    A2R10G10B10_UNORM = 78,
    A2R10G10B10_UINT = 79,
    A2R10G10B10_SNORM = 80,
    A2R10G10B10_SINT = 81,
    A2B10G10R10_UNORM = 82,
    A2B10G10R10_UINT = 83,
    A2B10G10R10_SNORM = 84,
    A2B10G10R10_SINT = 85,
    R10G10B10A2_UNORM = 86,
    R10G10B10A2_UINT = 87,
    R10G10B10A2_SNORM = 88,
    R10G10B10A2_SINT = 89,
    B10G10R10A2_UNORM = 90,
    B10G10R10A2_UINT = 91,
    B10G10R10A2_SNORM = 92,
    B10G10R10A2_SINT = 93,
    B10G11R11_UFLOAT = 94,
    E5B9G9R9_UFLOAT = 95,
    R16G16B16_UNORM = 96,
    R16G16B16_SNORM = 97,
    R16G16B16_UINT = 98,
    R16G16B16_SINT = 99,
    R16G16B16_SFLOAT = 100,
    R16G16B16_SBFLOAT = 101,
    R16G16B16A16_UNORM = 102,
    R16G16B16A16_SNORM = 103,
    R16G16B16A16_UINT = 104,
    R16G16B16A16_SINT = 105,
    R16G16B16A16_SFLOAT = 106,
    R16G16B16A16_SBFLOAT = 107,
    R32G32_UINT = 108,
    R32G32_SINT = 109,
    R32G32_SFLOAT = 110,
    R32G32B32_UINT = 111,
    R32G32B32_SINT = 112,
    R32G32B32_SFLOAT = 113,
    R32G32B32A32_UINT = 114,
    R32G32B32A32_SINT = 115,
    R32G32B32A32_SFLOAT = 116,
    R64_UINT = 117,
    R64_SINT = 118,
    R64_SFLOAT = 119,
    R64G64_UINT = 120,
    R64G64_SINT = 121,
    R64G64_SFLOAT = 122,
    R64G64B64_UINT = 123,
    R64G64B64_SINT = 124,
    R64G64B64_SFLOAT = 125,
    R64G64B64A64_UINT = 126,
    R64G64B64A64_SINT = 127,
    R64G64B64A64_SFLOAT = 128,
    D16_UNORM = 129,
    X8_D24_UNORM = 130,
    D32_SFLOAT = 131,
    S8_UINT = 132,
    D16_UNORM_S8_UINT = 133,
    D24_UNORM_S8_UINT = 134,
    D32_SFLOAT_S8_UINT = 135,
    DXBC1_RGB_UNORM = 136,
    DXBC1_RGB_SRGB = 137,
    DXBC1_RGBA_UNORM = 138,
    DXBC1_RGBA_SRGB = 139,
    DXBC2_UNORM = 140,
    DXBC2_SRGB = 141,
    DXBC3_UNORM = 142,
    DXBC3_SRGB = 143,
    DXBC4_UNORM = 144,
    DXBC4_SNORM = 145,
    DXBC5_UNORM = 146,
    DXBC5_SNORM = 147,
    DXBC6H_UFLOAT = 148,
    DXBC6H_SFLOAT = 149,
    DXBC7_UNORM = 150,
    DXBC7_SRGB = 151,
    PVRTC1_2BPP_UNORM = 152,
    PVRTC1_4BPP_UNORM = 153,
    PVRTC2_2BPP_UNORM = 154,
    PVRTC2_4BPP_UNORM = 155,
    PVRTC1_2BPP_SRGB = 156,
    PVRTC1_4BPP_SRGB = 157,
    PVRTC2_2BPP_SRGB = 158,
    PVRTC2_4BPP_SRGB = 159,
    ETC2_R8G8B8_UNORM = 160,
    ETC2_R8G8B8_SRGB = 161,
    ETC2_R8G8B8A1_UNORM = 162,
    ETC2_R8G8B8A1_SRGB = 163,
    ETC2_R8G8B8A8_UNORM = 164,
    ETC2_R8G8B8A8_SRGB = 165,
    ETC2_EAC_R11_UNORM = 166,
    ETC2_EAC_R11_SNORM = 167,
    ETC2_EAC_R11G11_UNORM = 168,
    ETC2_EAC_R11G11_SNORM = 169,
    ASTC_4x4_UNORM = 170,
    ASTC_4x4_SRGB = 171,
    ASTC_5x4_UNORM = 172,
    ASTC_5x4_SRGB = 173,
    ASTC_5x5_UNORM = 174,
    ASTC_5x5_SRGB = 175,
    ASTC_6x5_UNORM = 176,
    ASTC_6x5_SRGB = 177,
    ASTC_6x6_UNORM = 178,
    ASTC_6x6_SRGB = 179,
    ASTC_8x5_UNORM = 180,
    ASTC_8x5_SRGB = 181,
    ASTC_8x6_UNORM = 182,
    ASTC_8x6_SRGB = 183,
    ASTC_8x8_UNORM = 184,
    ASTC_8x8_SRGB = 185,
    ASTC_10x5_UNORM = 186,
    ASTC_10x5_SRGB = 187,
    ASTC_10x6_UNORM = 188,
    ASTC_10x6_SRGB = 189,
    ASTC_10x8_UNORM = 190,
    ASTC_10x8_SRGB = 191,
    ASTC_10x10_UNORM = 192,
    ASTC_10x10_SRGB = 193,
    ASTC_12x10_UNORM = 194,
    ASTC_12x10_SRGB = 195,
    ASTC_12x12_UNORM = 196,
    ASTC_12x12_SRGB = 197,
    CLUT_P4 = 198,
    CLUT_P4A4 = 199,
    CLUT_P8 = 200,
    CLUT_P8A8 = 201,
    R4G4B4A4_UNORM_PACK16 = 202,
    B4G4R4A4_UNORM_PACK16 = 203,
    R5G6B5_UNORM_PACK16 = 204,
    B5G6R5_UNORM_PACK16 = 205,
    R5G5B5A1_UNORM_PACK16 = 206,
    B5G5R5A1_UNORM_PACK16 = 207,
    A1R5G5B5_UNORM_PACK16 = 208,
    G16B16G16R16_422_UNORM = 209,
    B16G16R16G16_422_UNORM = 210,
    R12X4G12X4B12X4A12X4_UNORM_4PACK16 = 211,
    G12X4B12X4G12X4R12X4_422_UNORM_4PACK16 = 212,
    B12X4G12X4R12X4G12X4_422_UNORM_4PACK16 = 213,
    R10X6G10X6B10X6A10X6_UNORM_4PACK16 = 214,
    G10X6B10X6G10X6R10X6_422_UNORM_4PACK16 = 215,
    B10X6G10X6R10X6G10X6_422_UNORM_4PACK16 = 216,
    G8B8G8R8_422_UNORM = 217,
    B8G8R8G8_422_UNORM = 218,
    G8_B8_R8_3PLANE_420_UNORM = 219,
    G8_B8R8_2PLANE_420_UNORM = 220,
    G8_B8_R8_3PLANE_422_UNORM = 221,
    G8_B8R8_2PLANE_422_UNORM = 222,
    G8_B8_R8_3PLANE_444_UNORM = 223,
    G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16 = 224,
    G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16 = 225,
    G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16 = 226,
    G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16 = 227,
    G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16 = 228,
    G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16 = 229,
    G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16 = 230,
    G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16 = 231,
    G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16 = 232,
    G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16 = 233,
    G16_B16_R16_3PLANE_420_UNORM = 234,
    G16_B16_R16_3PLANE_422_UNORM = 235,
    G16_B16_R16_3PLANE_444_UNORM = 236,
    G16_B16R16_2PLANE_420_UNORM = 237,
    G16_B16R16_2PLANE_422_UNORM = 238,
    Count
} TextureFormat;

constexpr inline bool TextureFormatIsDepthOnly(TextureFormat const fmt)
{
    switch (fmt)
    {
    case D16_UNORM:
        return true;
    case X8_D24_UNORM:
        return true;
    case D32_SFLOAT:
        return true;
    default:
        return false;
    }
}

constexpr inline bool TextureFormatIsDepthAndStencil(TextureFormat const fmt)
{
    switch (fmt)
    {
    case D16_UNORM_S8_UINT:
        return true;
    case D24_UNORM_S8_UINT:
        return true;
    case D32_SFLOAT_S8_UINT:
        return true;
    default:
        return false;
    }
}


constexpr inline bool TextureFormatHasDepth(TextureFormat const fmt)
{
    return TextureFormatIsDepthOnly(fmt) || TextureFormatIsDepthAndStencil(fmt);
}


constexpr inline DXGI_FORMAT TextureFormatToDxgiFormat(const TextureFormat &format)
{
    switch (format)
    {
    case R1_UNORM:
        return DXGI_FORMAT_R1_UNORM;
#ifdef (XBOX)
    case R4G4_UNORM:
        return DXGI_FORMAT_R4G4_UNORM;
#endif
    case R5G6B5_UNORM:
        return DXGI_FORMAT_B5G6R5_UNORM;
    case B5G6R5_UNORM:
        return DXGI_FORMAT_B5G6R5_UNORM;
    case B5G5R5A1_UNORM:
        return DXGI_FORMAT_B5G5R5A1_UNORM;
    case R8_UNORM:
        return DXGI_FORMAT_R8_UNORM;
    case R8_SNORM:
        return DXGI_FORMAT_R8_SNORM;
    case R8_UINT:
        return DXGI_FORMAT_R8_UINT;
    case R8_SINT:
        return DXGI_FORMAT_R8_SINT;
    case R8G8_UNORM:
        return DXGI_FORMAT_R8G8_UNORM;
    case R8G8_SNORM:
        return DXGI_FORMAT_R8G8_SNORM;
    case R8G8_UINT:
        return DXGI_FORMAT_R8G8_UINT;
    case R8G8_SINT:
        return DXGI_FORMAT_R8G8_SINT;
    case B4G4R4A4_UNORM:
        return DXGI_FORMAT_B4G4R4A4_UNORM;

    case R8G8B8A8_UNORM:
        return DXGI_FORMAT_R8G8B8A8_UNORM;
    case R8G8B8A8_SNORM:
        return DXGI_FORMAT_R8G8B8A8_SNORM;
    case R8G8B8A8_UINT:
        return DXGI_FORMAT_R8G8B8A8_UINT;
    case R8G8B8A8_SINT:
        return DXGI_FORMAT_R8G8B8A8_SINT;
    case R8G8B8A8_SRGB:
        return DXGI_FORMAT_R8G8B8A8_UNORM_SRGB;

    case B8G8R8A8_UNORM:
        return DXGI_FORMAT_B8G8R8A8_UNORM;
    case B8G8R8X8_UNORM:
        return DXGI_FORMAT_B8G8R8X8_UNORM;
    case B8G8R8A8_SRGB:
        return DXGI_FORMAT_B8G8R8A8_UNORM_SRGB;

    case R10G10B10A2_UNORM:
        return DXGI_FORMAT_R10G10B10A2_UNORM;
    case R10G10B10A2_UINT:
        return DXGI_FORMAT_R10G10B10A2_UINT;

    case R16_UNORM:
        return DXGI_FORMAT_R16_UNORM;
    case R16_SNORM:
        return DXGI_FORMAT_R16_SNORM;
    case R16_UINT:
        return DXGI_FORMAT_R16_UINT;
    case R16_SINT:
        return DXGI_FORMAT_R16_SINT;
    case R16_SFLOAT:
        return DXGI_FORMAT_R16_FLOAT;
    case R16G16_UNORM:
        return DXGI_FORMAT_R16G16_UNORM;
    case R16G16_SNORM:
        return DXGI_FORMAT_R16G16_SNORM;
    case R16G16_UINT:
        return DXGI_FORMAT_R16G16_UINT;
    case R16G16_SINT:
        return DXGI_FORMAT_R16G16_SINT;
    case R16G16_SFLOAT:
        return DXGI_FORMAT_R16G16_FLOAT;
    case R16G16B16A16_UNORM:
        return DXGI_FORMAT_R16G16B16A16_UNORM;
    case R16G16B16A16_SNORM:
        return DXGI_FORMAT_R16G16B16A16_SNORM;
    case R16G16B16A16_UINT:
        return DXGI_FORMAT_R16G16B16A16_UINT;
    case R16G16B16A16_SINT:
        return DXGI_FORMAT_R16G16B16A16_SINT;
    case R16G16B16A16_SFLOAT:
        return DXGI_FORMAT_R16G16B16A16_FLOAT;
    case R32_UINT:
        return DXGI_FORMAT_R32_UINT;
    case R32_SINT:
        return DXGI_FORMAT_R32_SINT;
    case R32_SFLOAT:
        return DXGI_FORMAT_R32_FLOAT;
    case R32G32_UINT:
        return DXGI_FORMAT_R32G32_UINT;
    case R32G32_SINT:
        return DXGI_FORMAT_R32G32_SINT;
    case R32G32_SFLOAT:
        return DXGI_FORMAT_R32G32_FLOAT;
    case R32G32B32_UINT:
        return DXGI_FORMAT_R32G32B32_UINT;
    case R32G32B32_SINT:
        return DXGI_FORMAT_R32G32B32_SINT;
    case R32G32B32_SFLOAT:
        return DXGI_FORMAT_R32G32B32_FLOAT;
    case R32G32B32A32_UINT:
        return DXGI_FORMAT_R32G32B32A32_UINT;
    case R32G32B32A32_SINT:
        return DXGI_FORMAT_R32G32B32A32_SINT;
    case R32G32B32A32_SFLOAT:
        return DXGI_FORMAT_R32G32B32A32_FLOAT;
    case B10G11R11_UFLOAT:
        return DXGI_FORMAT_R11G11B10_FLOAT;
    case E5B9G9R9_UFLOAT:
        return DXGI_FORMAT_R9G9B9E5_SHAREDEXP;
    case D16_UNORM:
        return DXGI_FORMAT_D16_UNORM;
    case X8_D24_UNORM:
        return DXGI_FORMAT_D24_UNORM_S8_UINT;
    case D32_SFLOAT:
        return DXGI_FORMAT_D32_FLOAT;
    case D24_UNORM_S8_UINT:
        return DXGI_FORMAT_D24_UNORM_S8_UINT;
    case D32_SFLOAT_S8_UINT:
        return DXGI_FORMAT_D32_FLOAT_S8X24_UINT;
    case DXBC1_RGB_UNORM:
        return DXGI_FORMAT_BC1_UNORM;
    case DXBC1_RGB_SRGB:
        return DXGI_FORMAT_BC1_UNORM_SRGB;
    case DXBC1_RGBA_UNORM:
        return DXGI_FORMAT_BC1_UNORM;
    case DXBC1_RGBA_SRGB:
        return DXGI_FORMAT_BC1_UNORM_SRGB;
    case DXBC2_UNORM:
        return DXGI_FORMAT_BC2_UNORM;
    case DXBC2_SRGB:
        return DXGI_FORMAT_BC2_UNORM_SRGB;
    case DXBC3_UNORM:
        return DXGI_FORMAT_BC3_UNORM;
    case DXBC3_SRGB:
        return DXGI_FORMAT_BC3_UNORM_SRGB;
    case DXBC4_UNORM:
        return DXGI_FORMAT_BC4_UNORM;
    case DXBC4_SNORM:
        return DXGI_FORMAT_BC4_SNORM;
    case DXBC5_UNORM:
        return DXGI_FORMAT_BC5_UNORM;
    case DXBC5_SNORM:
        return DXGI_FORMAT_BC5_SNORM;
    case DXBC6H_UFLOAT:
        return DXGI_FORMAT_BC6H_UF16;
    case DXBC6H_SFLOAT:
        return DXGI_FORMAT_BC6H_SF16;
    case DXBC7_UNORM:
        return DXGI_FORMAT_BC7_UNORM;
    case DXBC7_SRGB:
        return DXGI_FORMAT_BC7_UNORM_SRGB;
#ifdef XBOX
    case D16_UNORM_S8_UINT:
        return DXGI_FORMAT_D16_UNORM_S8_UINT;
#endif
    default:
        return DXGI_FORMAT_UNKNOWN;
    }
}


inline DXGI_FORMAT DxgiFormatToTypeless(DXGI_FORMAT fmt) {
	switch (fmt) {
	case DXGI_FORMAT_R32G32B32A32_FLOAT:
	case DXGI_FORMAT_R32G32B32A32_UINT:
	case DXGI_FORMAT_R32G32B32A32_SINT: return DXGI_FORMAT_R32G32B32A32_TYPELESS;
	case DXGI_FORMAT_R32G32B32_FLOAT:
	case DXGI_FORMAT_R32G32B32_UINT:
	case DXGI_FORMAT_R32G32B32_SINT: return DXGI_FORMAT_R32G32B32_TYPELESS;

	case DXGI_FORMAT_R16G16B16A16_FLOAT:
	case DXGI_FORMAT_R16G16B16A16_UNORM:
	case DXGI_FORMAT_R16G16B16A16_UINT:
	case DXGI_FORMAT_R16G16B16A16_SNORM:
	case DXGI_FORMAT_R16G16B16A16_SINT: return DXGI_FORMAT_R16G16B16A16_TYPELESS;

	case DXGI_FORMAT_R32G32_FLOAT:
	case DXGI_FORMAT_R32G32_UINT:
	case DXGI_FORMAT_R32G32_SINT: return DXGI_FORMAT_R32G32_TYPELESS;

	case DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM:
#if XBOX
	case DXGI_FORMAT_R10G10B10_SNORM_A2_UNORM:
#endif
	case DXGI_FORMAT_R10G10B10A2_UNORM:
	case DXGI_FORMAT_R10G10B10A2_UINT: return DXGI_FORMAT_R10G10B10A2_TYPELESS;

	case DXGI_FORMAT_R8G8B8A8_UNORM:
	case DXGI_FORMAT_R8G8B8A8_UNORM_SRGB:
	case DXGI_FORMAT_R8G8B8A8_UINT:
	case DXGI_FORMAT_R8G8B8A8_SNORM:
	case DXGI_FORMAT_R8G8B8A8_SINT: return DXGI_FORMAT_R8G8B8A8_TYPELESS;
	case DXGI_FORMAT_R16G16_FLOAT:
	case DXGI_FORMAT_R16G16_UNORM:
	case DXGI_FORMAT_R16G16_UINT:
	case DXGI_FORMAT_R16G16_SNORM:
	case DXGI_FORMAT_R16G16_SINT: return DXGI_FORMAT_R16G16_TYPELESS;

	case DXGI_FORMAT_R9G9B9E5_SHAREDEXP:
	case DXGI_FORMAT_D32_FLOAT:
	case DXGI_FORMAT_R32_FLOAT:
	case DXGI_FORMAT_R32_UINT:
	case DXGI_FORMAT_R32_SINT: return DXGI_FORMAT_R32_TYPELESS;
	case DXGI_FORMAT_R8G8_UNORM:
	case DXGI_FORMAT_R8G8_UINT:
	case DXGI_FORMAT_R8G8_SNORM:
	case DXGI_FORMAT_R8G8_SINT: return DXGI_FORMAT_R8G8_TYPELESS;
	case DXGI_FORMAT_B4G4R4A4_UNORM: // just treats a 16 raw bits
	case DXGI_FORMAT_D16_UNORM:
	case DXGI_FORMAT_R16_FLOAT:
	case DXGI_FORMAT_R16_UNORM:
	case DXGI_FORMAT_R16_UINT:
	case DXGI_FORMAT_R16_SNORM:
	case DXGI_FORMAT_R16_SINT: return DXGI_FORMAT_R16_TYPELESS;
	case DXGI_FORMAT_A8_UNORM:
	case DXGI_FORMAT_R8_UNORM:
	case DXGI_FORMAT_R8_UINT:
	case DXGI_FORMAT_R8_SNORM:
#if XBOX
	case DXGI_FORMAT_R4G4_UNORM:
#endif
	case DXGI_FORMAT_R8_SINT: return DXGI_FORMAT_R8_TYPELESS;
	case DXGI_FORMAT_BC1_UNORM:
	case DXGI_FORMAT_BC1_UNORM_SRGB: return DXGI_FORMAT_BC1_TYPELESS;
	case DXGI_FORMAT_BC2_UNORM:
	case DXGI_FORMAT_BC2_UNORM_SRGB: return DXGI_FORMAT_BC2_TYPELESS;
	case DXGI_FORMAT_BC3_UNORM:
	case DXGI_FORMAT_BC3_UNORM_SRGB: return DXGI_FORMAT_BC3_TYPELESS;
	case DXGI_FORMAT_BC4_UNORM:
	case DXGI_FORMAT_BC4_SNORM: return DXGI_FORMAT_BC4_TYPELESS;
	case DXGI_FORMAT_BC5_UNORM:
	case DXGI_FORMAT_BC5_SNORM: return DXGI_FORMAT_BC5_TYPELESS;
	case DXGI_FORMAT_B5G6R5_UNORM:
	case DXGI_FORMAT_B5G5R5A1_UNORM: return DXGI_FORMAT_R16_TYPELESS;

	case DXGI_FORMAT_R11G11B10_FLOAT: return DXGI_FORMAT_R11G11B10_FLOAT;

	case DXGI_FORMAT_B8G8R8X8_UNORM:
	case DXGI_FORMAT_B8G8R8X8_UNORM_SRGB: return DXGI_FORMAT_B8G8R8X8_TYPELESS;

	case DXGI_FORMAT_B8G8R8A8_UNORM:
	case DXGI_FORMAT_B8G8R8A8_UNORM_SRGB: return DXGI_FORMAT_B8G8R8A8_TYPELESS;

	case DXGI_FORMAT_BC6H_UF16:
	case DXGI_FORMAT_BC6H_SF16: return DXGI_FORMAT_BC6H_TYPELESS;

	case DXGI_FORMAT_BC7_UNORM:
	case DXGI_FORMAT_BC7_UNORM_SRGB: return DXGI_FORMAT_BC7_TYPELESS;

	case DXGI_FORMAT_X32_TYPELESS_G8X24_UINT:
	case DXGI_FORMAT_D32_FLOAT_S8X24_UINT: return DXGI_FORMAT_R32G8X24_TYPELESS;
	case DXGI_FORMAT_X24_TYPELESS_G8_UINT: return DXGI_FORMAT_R24G8_TYPELESS;
	case DXGI_FORMAT_D24_UNORM_S8_UINT: return DXGI_FORMAT_R24G8_TYPELESS;

		// typeless just return the input format
	case DXGI_FORMAT_R32G32B32A32_TYPELESS:
	case DXGI_FORMAT_R32G32B32_TYPELESS:
	case DXGI_FORMAT_R16G16B16A16_TYPELESS:
	case DXGI_FORMAT_R32G32_TYPELESS:
	case DXGI_FORMAT_R32G8X24_TYPELESS:
	case DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS:
	case DXGI_FORMAT_R10G10B10A2_TYPELESS:
	case DXGI_FORMAT_R8G8B8A8_TYPELESS:
	case DXGI_FORMAT_R16G16_TYPELESS:
	case DXGI_FORMAT_R32_TYPELESS:
	case DXGI_FORMAT_R24G8_TYPELESS:
	case DXGI_FORMAT_R24_UNORM_X8_TYPELESS:
	case DXGI_FORMAT_R8G8_TYPELESS:
	case DXGI_FORMAT_R16_TYPELESS:
	case DXGI_FORMAT_R8_TYPELESS:
	case DXGI_FORMAT_BC1_TYPELESS:
	case DXGI_FORMAT_BC2_TYPELESS:
	case DXGI_FORMAT_BC3_TYPELESS:
	case DXGI_FORMAT_BC4_TYPELESS:
	case DXGI_FORMAT_BC5_TYPELESS:
	case DXGI_FORMAT_B8G8R8A8_TYPELESS:
	case DXGI_FORMAT_B8G8R8X8_TYPELESS:
	case DXGI_FORMAT_BC6H_TYPELESS:
	case DXGI_FORMAT_BC7_TYPELESS: return fmt;

	case DXGI_FORMAT_R1_UNORM:
	case DXGI_FORMAT_R8G8_B8G8_UNORM:
	case DXGI_FORMAT_G8R8_G8B8_UNORM:
	case DXGI_FORMAT_AYUV:
	case DXGI_FORMAT_Y410:
	case DXGI_FORMAT_Y416:
	case DXGI_FORMAT_NV12:
	case DXGI_FORMAT_P010:
	case DXGI_FORMAT_P016:
	case DXGI_FORMAT_420_OPAQUE:
	case DXGI_FORMAT_YUY2:
	case DXGI_FORMAT_Y210:
	case DXGI_FORMAT_Y216:
	case DXGI_FORMAT_NV11:
	case DXGI_FORMAT_AI44:
	case DXGI_FORMAT_IA44:
	case DXGI_FORMAT_P8:
	case DXGI_FORMAT_A8P8:
	case DXGI_FORMAT_P208:
	case DXGI_FORMAT_V208:
	case DXGI_FORMAT_V408:
	case DXGI_FORMAT_UNKNOWN: return DXGI_FORMAT_UNKNOWN;
	}
	return DXGI_FORMAT_UNKNOWN;
}
